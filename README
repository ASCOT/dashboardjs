dashboard.js

libxmljs requires Pythton scons

$ wget http://sourceforge.net/projects/scons/files/scons/2.0.1/scons-2.0.1.tar.gz
$ tar xvf scons-2.0.1.tar.gz
$ cd scons-2.0.1
$ sudo python setup.py install --standalone-lib

wget query
----------

wget -O result "http://cas.sdss.org/public/en/tools/search/x_sql.asp?format=xml&cmd=SELECT%20TOP%20500%20objid%2C%20ra%2C%20dec%2C%20modelMag_u%2C%20modelMag_g%2C%20modelMag_r%2C%20modelMag_i%2C%20modelMag_z%2C%20(modelMag_u%20-%20modelMag_g)%20as%20u_g%2C%20(modelMag_g%20-%20modelMag_r)%20as%20g_r%2C%20(modelMag_r%20-%20modelMag_i)%20as%20r_i%2C%20(modelMag_i%20-%20modelMag_z)%20as%20i_z%20from%20Star%20where%20ra%20between%20132.765666%20and%20132.884334%20and%20dec%20between%2011.755657%20and%2011.844343%20and%20modelMag_g%20%3E%20-9999%20ORDER%20BY%20modelMag_g%20ASC" 

Testing API from console
------------------------

- Creating dashboard by providing records

curl -v -X POST -d '{"gadgets":{"skyView":1, "plotView": 1}, "dataSets": [{"name": "Stars", "records": [{"objid":"1237671262272290970","ra":"132.82279455","dec":"11.75623274","modelMag_u":"16.483011","modelMag_g":"13.697638","modelMag_r":"8.793903","modelMag_i":"8.776305","modelMag_z":"11.774291","u_g":"2.785374","g_r":"4.903734","r_i":"0.017598","i_z":"-2.997986"},
{"objid":"1237671262272290962","ra":"132.84498644","dec":"11.80053042","modelMag_u":"15.75631","modelMag_g":"13.703258","modelMag_r":"13.506081","modelMag_i":"12.478303","modelMag_z":"12.25265","u_g":"2.053052","g_r":"0.197177","r_i":"1.027778","i_z":"0.225653"}]}]}' http://localhost/newDashboard/

- Creating dashboard by providing query

curl -v -X POST -d '{"ga  dgets":{"skyView":1, "plotView": 1}, "dataSets": [{"name": "Stars", "source": "sdss", "query":"SELECT TOP 500 objid, ra, dec, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, (modelMag_u - modelMag_g) as u_g, (modelMag_g - modelMag_r) as g_r, (modelMag_r - modelMag_i) as r_i, (modelMag_i - modelMag_z) as i_z from Star where ra between 132.765732 and 132.884267 and dec between 11.756152 and 11.843848 and modelMag_g > -9999 ORDER BY modelMag_g ASC"}]}' http://localhost/newDashboard/


Delicious AJAX library that works on both node.js server and browser. In the browser it detects cross domain requests and then it falls back into iframe proxy method.

Count word in file. Including multiple ocurrencies in one line

grep -o string * | wc -l

Count words in file. One per line

cat * | grep -c string

ADASS Presentation Idea
------------------------

Exercise of web purism

Building on the root concept of the web.

Every piece of information has its own Url. Cache, bookmark, index and link...

Front ends on top of the API

Google Sky View Production Server Key
--------------------------------------

ABQIAAAAVGHgv2pouycqhAw5tCmtChRUEqzWmCBjYYhr3pAAB1-qbxF2ORS71VNJWPXhtTrP99ACOXUleuYOBg